{"version":3,"sources":["assets/dai.png","assets/usdc.png","assets/usdt.png","assets/busd.png","assets/o_flights_logo.webp","assets/background.png","theme.js","hooks/connectors.js","hooks/useWeb3Modal.js","hooks/useBalance.js","utils/utils.js","components/header/Header.styles.js","../../contracts/src/abis.js","../../contracts/src/addresses.js","utils/contracts.js","hooks/useOwner.js","hooks/useContractInfo.js","hooks/useBlock.js","hooks/useTokenBalance.js","components/header/Header.component.js","containers/home/Home.styles.js","components/cards/infocard/InfoCard.styles.js","hooks/usePresaleStage.js","hooks/useCurrentStage.js","components/cards/infocard/InfoCard.component.js","components/cards/investcard/InvestCard.styles.js","components/inputs/PickerInput.js","hooks/useApprove.js","hooks/useAllowance.js","components/cards/investcard/InvestCard.component.js","containers/home/Home.component.js","containers/admin/Admin.styles.js","components/adminpanel/adminpanel.styles.js","components/inputs/BasicInput.js","components/adminpanel/components/NewStage.component.js","components/adminpanel/components/Info.component.js","components/adminpanel/components/Controls.component.js","components/adminpanel/components/Whitelist.component.js","components/adminpanel/components/StagesTable.component.js","containers/admin/Admin.component.js","containers/farm/Farm.styles.js","components/cards/farmcard/FarmCard.styles.js","components/modals/StakeModal.styles.js","hooks/useStake.js","components/modals/StakeModal.component.js","hooks/useFarm.js","hooks/useUserFarm.js","hooks/useHarvest.js","components/cards/farmcard/FarmCard.component.js","hooks/useFarmsAmount.js","containers/farm/Farm.component.js","App.js","index.js"],"names":["module","exports","_theme","createMuiTheme","root","display","alignItems","justifyContent","typography","palette","type","gradient","main","primary","secondary","background","header","paper","text","theme","responsiveFontSizes","injected","InjectedConnector","supportedChainIds","useWeb3Modal","config","useState","provider","setProvider","autoLoad","infuraId","NETWORK","useWeb3React","activate","deactivate","web3Modal","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","loadWeb3Modal","useCallback","a","connect","newProvider","Web3Provider","logoutOfWeb3Modal","clearCachedProvider","window","location","reload","useEffect","cachedProvider","useBalance","account","library","chainId","balance","setBalance","stale","eth","getBalance","then","utils","fromWei","catch","undefined","MAX_UINT","formatter","Intl","NumberFormat","makeContract","abi","address","Contract","BigNumber","useStyles","makeStyles","title","color","fontVariantCaps","breakpoints","up","wrapper","flexWrap","button","nowrapper","abis","erc20","erc20Abi","ico","icoAbi","farm","farmAbi","factory","factoryAbi","addresses","bsc","dai","usdc","usdt","busd","ofly","masterchef","wbnb","pancakeFactory","pancakeRouter","getICOcontract","getDAI","getFarmContract","useOwner","info","setInfo","ICO","fetchInfo","methods","owner","call","useContractInfo","React","infoObj","remainingTokens","remainingInput","currentRate","currentLimit","currentStage","totalStages","grabTotalStages","getTotalStages","tot","console","log","grabRemainingTokens","getRemainingTokens","grabLeftoverInputAmount","getLeftOverInputAmount","grabCurrentRate","getCurrentrate","grabCurrentLimit","getCurrentLimit","grabCurrentStage","grabOwner","collectInfo","res","useBlock","block","setBlock","interval","setInterval","getBlockNumber","latestBlockNumber","clearInterval","useTokenBalance","tokenAddress","fetchBalance","contract","balanceOf","toString","WalletButton","connected","Button","size","variant","onClick","Typography","noWrap","Header","nav1","nav2","isAdmin","setAdmin","tokenBalance","accountBalance","classes","AppBar","position","elevation","Toolbar","className","Grid","container","spacing","direction","justify","item","xs","to","alt","src","OflightLogo","component","Link","format","Number","input","formatEther","padding","card","minHeight","backgroundColor","borderRadius","content","usePresaleStage","id","getStage","stage","name","allocation","min","limit","rate","sold","active","goalReached","whitelisted","useCurrentStage","setCurrentStage","_currentStage","InfoCard","props","CardContent","gutterBottom","xl","width","minWidth","CssTextField","withStyles","borderColor","TextField","textfield","label","menu","PickerInput","anchorEl","setAnchorEl","daiLogo","image","setImage","selected","setSelected","handleClose","InputLabelProps","shrink","defaultValue","helperText","onChange","event","currentTarget","style","maxWidth","Menu","open","Boolean","onClose","MenuItem","usdcLogo","usdtLogo","busdLogo","useApprove","amount","approve","_address","_amount","send","from","onApprove","useAllowance","spender","allowance","setAllowance","fetchAllowance","InvestCard","value","setValue","token","setToken","setMessage","setLoading","approved","setApproved","onBuy","e","preventDefault","buyTokens","message","includes","_selected","_value","toWei","target","disabled","Home","href","margin","BasicInput","NewStage","setAllocation","setMin","setLimit","setRate","setName","setWhitelisted","handleSubmit","setNewStage","fontSize","Info","contractInfo","Controls","paused","onStart","startICO","onStartNext","startNextStage","onPause","pauseICO","onUnPause","unpauseICO","fullWidth","Whitelist","setAddress","onCheckWhiteList","isWhitelisted","onAddWhitelist","add","onRemoveWhitelist","remove","ButtonGroup","checkbox","state","StagesTabel","rows","_rows","i","push","makeRows","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","Admin","modal","height","border","boxShadow","shadows","useStake","pid","deposit","_pid","onStake","StakeModal","lpToken","withdraw","setWithdraw","noValidate","autoComplete","Switch","checked","useFarm","allocPoint","lastRewardBlock","accOflyPerShare","FARM","poolInfo","useUserFarm","userInfo","pendingOfly","pending","rewardDebt","useHarvest","harvest","onHarvest","FarmCard","avatar","expanded","setExpanded","setOpen","CardHeader","Avatar","subheader","times","toNumber","toLocaleString","slice","CardActions","disableSpacing","IconButton","clsx","expand","expandOpen","aria-expanded","Collapse","in","timeout","unmountOnExit","Modal","top","left","transform","closeAfterTransition","useFarmsAmount","total","setTotal","poolLength","FarmNames","Avatars","Farm","totalPools","_pools","renderedFarms","renderFarms","backgroundImage","backgroundPosition","backgroundSize","App","ThemeProvider","path","exact","ReactDOM","render","getLibrary","Web3","pollingInterval","document","getElementById"],"mappings":"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","file":"static/js/main.44d39ae5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dai.26d4501f.png\";","module.exports = __webpack_public_path__ + \"static/media/usdc.c76b33ca.png\";","module.exports = __webpack_public_path__ + \"static/media/usdt.a440d4b5.png\";","module.exports = __webpack_public_path__ + \"static/media/busd.a578efd2.png\";","module.exports = __webpack_public_path__ + \"static/media/o_flights_logo.47d38831.webp\";","module.exports = __webpack_public_path__ + \"static/media/background.30baae81.png\";","\r\nimport { \r\n    createMuiTheme, \r\n    responsiveFontSizes, \r\n  } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst _theme = createMuiTheme({\r\n    root: {\r\n       display: 'flex', \r\n       alignItems: 'center',\r\n       justifyContent:'center'\r\n    },\r\n    typography: {\r\n       \r\n    \r\n    },\r\n    \r\n    palette: {\r\n        type: 'dark',\r\n        gradient: {\r\n          main: `linear-gradient(25deg, #FF615C 5%, #B80600 90%)`\r\n        },\r\n        primary: {\r\n            main: '#FF615C',\r\n        },\r\n        secondary: {\r\n          main: '#FF615C',\r\n        },\r\n        background: {\r\n            main: '#1B1B1B',\r\n        },\r\n        header: {\r\n            main: \"#1B1B1B\"\r\n        },\r\n        paper: {\r\n            main: '#1B1B1B'\r\n        },\r\n        text: {\r\n            primary: \"#fafafa\",\r\n            secondary: \"#ffffff\",\r\n        },\r\n    },\r\n  });\r\n\r\nexport const theme = responsiveFontSizes(_theme);\r\n\r\n\r\n\r\n  ","import { InjectedConnector } from \"@web3-react/injected-connector\";\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 4, 5, 42, 250, 97, 56, 1337]\r\n});","import { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { injected } from \"./connectors\"\nimport { useWeb3React } from \"@web3-react/core\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\n\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const { autoLoad = false, infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n  const { activate, deactivate } = useWeb3React();\n\n  // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  const web3Modal = new Web3Modal({\n    network: NETWORK,\n    cacheProvider: true,\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId,\n        },\n      },\n    },\n  });\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n    activate(injected);\n  }, [web3Modal, activate]);\n\n  const logoutOfWeb3Modal = useCallback(\n    async function () {\n      await web3Modal.clearCachedProvider();\n      deactivate(injected);\n      window.location.reload();\n    },\n    [web3Modal],\n  );\n\n  // If user has loaded a wallet before, load it automatically.\n  useEffect(() => {\n    if (autoLoad && web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [autoLoad, web3Modal.cachedProvider]);\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","  \r\nimport { useState, useEffect } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\n\r\nconst useBalance = () => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [balance, setBalance] = useState(0)\r\n\r\n    useEffect(() => {\r\n      if (!!account && !!library) {\r\n        let stale = false\r\n  \r\n        library.eth\r\n          .getBalance(account)\r\n          .then((balance) => {\r\n            if (!stale) {\r\n              setBalance(library.utils.fromWei(balance, 'ether'))\r\n            }\r\n          })\r\n          .catch(() => {\r\n            if (!stale) {\r\n              setBalance(0)\r\n            }\r\n          })\r\n  \r\n        return () => {\r\n          stale = true\r\n          setBalance(undefined)\r\n        }\r\n      }\r\n    }, [account, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\r\n    \r\n    return balance;\r\n}\r\n\r\nexport default useBalance","import BigNumber from 'bignumber.js'\n\nexport const MAX_UINT= '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n\nexport const formatter = new Intl.NumberFormat('en-US', \n    \n    // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n    );\n\nexport const makeContract = (library, abi, address) => {\n  return new library.eth.Contract(abi, address);\n}\n\nconst blocksPerYear = new BigNumber(10518975); \n\nconst getPoolWeight = async (masterChefContract, pid) => {\n    const { allocPoint } = await masterChefContract.methods.poolInfo(pid).call()\n    const totalAllocPoint = await masterChefContract.methods\n      .totalAllocPoint()\n      .call()\n    return new BigNumber(allocPoint).div(new BigNumber(totalAllocPoint))\n}\n\nexport const getTotalLPValue = async (\n    masterChefContract,\n    wethContract,\n    lpContract,\n    tokenContract,\n    pid,\n    SUSHI_PER_BLOCK\n  ) => {\n    // Get balance of the token address\n    const tokenAmountWholeLP = await tokenContract.methods\n      .balanceOf(lpContract.options.address)\n      .call()\n    const tokenDecimals = await tokenContract.methods.decimals().call()\n    // Get the share of lpContract that masterChefContract owns\n    const balance = await lpContract.methods\n      .balanceOf(masterChefContract.options.address)\n      .call()\n    // Convert that into the portion of total lpContract = p1\n    const totalSupply = await lpContract.methods.totalSupply().call()\n    // Get total weth value for the lpContract = w1\n    const lpContractWeth = await wethContract.methods\n      .balanceOf(lpContract.options.address)\n      .call()\n    // Return p1 * w1 * 2\n    const portionLp = new BigNumber(balance).div(new BigNumber(totalSupply))\n    const lpWethWorth = new BigNumber(lpContractWeth)\n    const totalLpWethValue = portionLp.times(lpWethWorth).times(new BigNumber(2))\n    // Calculate\n    const tokenAmount = new BigNumber(tokenAmountWholeLP)\n      .times(portionLp)\n      .div(new BigNumber(10).pow(tokenDecimals))\n  \n    const wethAmount = new BigNumber(lpContractWeth)\n      .times(portionLp)\n      .div(new BigNumber(10).pow(18))\n    const poolWeight = await getPoolWeight(masterChefContract, pid);\n\n    const _apr = wethAmount.div(tokenAmount)\n        .times(SUSHI_PER_BLOCK)\n        .times(blocksPerYear)\n        .times(poolWeight)\n        .div(totalLpWethValue.div(new BigNumber(10).pow(18)));\n\n    return {\n      tokenAmount: tokenAmount.toString(),\n      wethAmount: wethAmount.toString(),\n      totalWethValue: totalLpWethValue.div(new BigNumber(10).pow(18)).toString(),\n      tokenPriceInWeth: wethAmount.div(tokenAmount).toString(),\n      poolWeight: poolWeight.toString(),\n      apr: _apr.toString(),\n    }\n  }\n\n","import { theme } from '../../theme'\nimport { \n  makeStyles,\n} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n    header: {\n        //backgroundColor: theme.palette.header.main\n    },\n    title: {\n        display: 'none',\n        color: theme.palette.text.main,\n        fontVariantCaps: 'all-small-caps',\n        '&:hover': {\n            color: theme.palette.primary,\n        },\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },},\n    wrapper: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    button: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        \n    },\n    nowrapper: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n}));","import erc20Abi from \"./abis/erc20.json\";\nimport icoAbi from \"../build/contracts/ICO.json\";\nimport farmAbi from \"../build/contracts/OFlightsFarm.json\";\nimport factoryAbi from \"./abis/factory.json\";\n\nconst abis = {\n  erc20: erc20Abi,\n  ico: icoAbi.abi,\n  farm: farmAbi.abi, \n  factory: factoryAbi\n};\n\nexport default abis;\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\n\n\nconst addresses = {\n  bsc: {\n    dai: '0x96BB4f98138111A372d08e695cF61A08dfb46509',\n    usdc: '0x583512bAa354C7f66cdCF0932c8E56F922492536',\n    usdt: '0x409088F06b621c136916CA97B94D25a5794709Ab',\n    busd: '0xB989c7DF2d25a522Faa6EFe690D1c7d2d3B22B60',\n    ofly: '0x370e1d74b63134aA7cA41Fa17B81dDA0Bc2c57b2',\n    ico: '0x09eae0025e21f23E33B3fB1d81ceB93b66dDB853',\n    masterchef: '0x3D4D46A5474EB9D0fcDd9C8cCA3355383D52f11c',\n    wbnb: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n    pancakeFactory: \"0x6725F303b657a9451d8BA641348b6761A6CC7a17\",\n    pancakeRouter: \"0xD99D1c33F9fC3444f8101754aBC46c52416550D1\",\n  },\n \n};\n\nexport default addresses;\n","import { addresses, abis } from \"@project/contracts\";\nimport { makeContract } from './utils';\n\nexport const getICOcontract = (library, chainId) => {\n    if(chainId === 56 || chainId === 1337) {\n        return makeContract(library, abis.ico, addresses.bsc.ico);\n    } else if( chainId === 97) {\n        return makeContract(library, abis.ico, addresses.bsc.ico);\n    }\n}\n\nexport const getOFLY = (library, chainId) => {\n    if(chainId === 56 || chainId === 1337 ) {\n        return makeContract(library, abis.erc20, addresses.bsc.ofly);\n    } else if( chainId === 97) {\n        return makeContract(library, abis.erc20, addresses.bsc.ofly);\n    }\n}\n\nexport const getDAI = (library, chainId) => {\n    if(chainId === 56 || chainId === 1337 ) {\n        return makeContract(library, abis.erc20, addresses.bsc.dai);\n    } else if( chainId === 97) {\n        return makeContract(library, abis.erc20, addresses.bsc.dai);\n    }\n}\n\nexport const getUSDC = (library, chainId) => {\n    if(chainId === 56 || chainId === 1337 ) {\n        return makeContract(library, abis.erc20, addresses.bsc.usdc);\n    } else if( chainId === 97) {\n        return makeContract(library, abis.erc20, addresses.bsc.usdc);\n    }\n}\n\nexport const getUSDT = (library, chainId) => {\n    if(chainId === 56 || chainId === 1337 ) {\n        return makeContract(library, abis.erc20, addresses.bsc.usdt);\n    } else if( chainId === 97) {\n        return makeContract(library, abis.erc20, addresses.bsc.usdt);\n    }\n}\n\nexport const getFarmContract = (library, chainId) => {\n    if(chainId === 56 || chainId === 1337 ) {\n        return makeContract(library, abis.farm, addresses.bsc.farm);\n    } else if( chainId === 97) {\n        return makeContract(library, abis.farm, addresses.bsc.farm);\n    }\n}\n\nexport const getWBNB = (library, chainId) => {\n    if(chainId === 56 || chainId === 1337) {\n        return makeContract(library, abis.erc20, addresses.bsc.wbnb);\n    } else if( chainId === 97) {\n        return makeContract(library, abis.erc20, addresses.bsc.wbnb);\n    }\n}","import { useCallback, useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { makeContract, MAX_UINT, getTotalLPValue } from '../utils/utils';\nimport { getICOcontract } from '../utils/contracts';\n\nconst useOwner = () => {\n    const { account, library, chainId } = useWeb3React()\n    const [ info, setInfo ] = useState();\n    const ICO = getICOcontract(library, chainId);\n\n    const fetchInfo = useCallback(async () => {\n      const owner = await ICO.methods.owner().call();\n    \n      setInfo(owner)\n\n    }, [account, library, ICO])\n\n    useEffect(() => {\n\n        if (account && library && ICO) {\n            fetchInfo();\n        }\n    }, [account, library, ICO])\n\n    return info\n}\n\nexport default useOwner;\n","import React from 'react';\nimport { useWeb3React } from '@web3-react/core';\n\nimport { getDAI, getUSDC, getUSDT, getICOcontract } from '../utils/contracts'\n\nconst useContractInfo = () => {\n    const { account, library, chainId } = useWeb3React();\n    const [ info, setInfo] = React.useState(0);\n\n    const ICO = getICOcontract(library, chainId);\n\n    let infoObj = { \n      remainingTokens: '', \n      remainingInput: '', \n      currentRate: '',\n      currentLimit: '', \n      currentStage: '',\n      totalStages: '',  \n      owner: '',             \n    };\n    \n    const grabTotalStages = async () => {\n        try {\n          const tot = await ICO.methods.getTotalStages().call();\n          infoObj.totalStages = tot; \n          return tot;\n        } catch (err) {\n          console.log(err);\n          return 0;\n        }\n      };\n    const grabRemainingTokens = async () => {\n      try {\n        const tot = await ICO.methods.getRemainingTokens().call();\n        infoObj.remainingTokens = tot; \n        return tot;\n      } catch (err) {\n        console.log(err);\n        return 0;\n      }\n    };\n\n    const grabLeftoverInputAmount = async () => {\n      try {\n        const tot = await ICO.methods.getLeftOverInputAmount().call();\n        infoObj.remainingInput = tot; \n        return tot;\n      } catch (err) {\n        console.log(err);\n        return 0;\n      }\n    };\n\n    const grabCurrentRate = async () => {\n      try {\n        const tot = await ICO.methods.getCurrentrate().call();\n        infoObj.currentRate = tot; \n        return tot;\n      } catch (err) {\n        console.log(err);\n        return 0;\n      }\n    };\n\n    const grabCurrentLimit = async () => {\n      try {\n        const tot = await ICO.methods.getCurrentLimit().call();\n        infoObj.currentLimit = tot; \n        return tot;\n      } catch (err) {\n        console.log(err);\n        return 0;\n      }\n    };\n    const grabCurrentStage = async () => {\n      try {\n        const tot = await ICO.methods.currentStage().call();\n        infoObj.currentStage = tot; \n        return tot;\n      } catch (err) {\n        console.log(err);\n        return 0;\n      }\n    };\n\n    const grabOwner = async () => {\n      try {\n        const tot = await ICO.methods.owner().call();\n        infoObj.owner = tot; \n        return tot;\n      } catch (err) {\n        console.log(err);\n        return 0;\n      }\n    };\n  \n    const collectInfo = async() => {\n      await grabTotalStages();\n      await grabLeftoverInputAmount();\n      await grabRemainingTokens();\n      await grabCurrentLimit();\n      await grabCurrentRate();\n      await grabOwner();\n      await grabCurrentStage();\n      return infoObj;\n    };\n\n    React.useEffect(() => {\n        if(!!account) {\n            collectInfo().then((res) => {\n              setInfo(res);\n          });\n        }\n        return () => {\n          \n        }\n      }, [account, info, chainId, ICO])\n    \n    return info;\n}\n\nexport default useContractInfo;","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\n\nconst useBlock = () => {\n  const [block, setBlock] = useState(0)\n  const { library } = useWeb3React()\n\n  useEffect(() => {\n\n    if (!library) return\n    \n    const interval = setInterval(async () => {\n      const latestBlockNumber = await library.eth.getBlockNumber()\n      if (block !== latestBlockNumber) {\n        setBlock(latestBlockNumber)\n      }\n    }, 10000)\n\n    return () => clearInterval(interval)\n  }, [library])\n\n  return block\n}\n\nexport default useBlock\n","import { useCallback, useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { makeContract, MAX_UINT } from '../utils/utils';\nimport useBlock from './useBlock'\n\nconst useTokenBalance = (tokenAddress) => {\n    const { account, library, chainId } = useWeb3React()\n    const [ balance, setBalance ] = useState(new BigNumber(0))\n\n    const block = useBlock()\n\n    const fetchBalance = useCallback(async () => {\n        const contract = makeContract(library, abis.erc20, tokenAddress);   \n        const balance = await contract.methods.balanceOf(account).call();\n        setBalance(balance.toString())\n    }, [account, library, tokenAddress])\n\n    useEffect(() => {\n       \n        if (account && library && tokenAddress) {\n        fetchBalance()\n        }\n    }, [account, library, block, tokenAddress])\n\n    return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\r\nimport { Button, Grid, AppBar, Toolbar, Typography } from '@material-ui/core'\r\n\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Link } from 'react-router-dom'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport useBalance from '../../hooks/useBalance';\r\nimport { formatter } from '../../utils/utils'\r\nimport OflightLogo from '../../assets/o_flights_logo.webp'\r\nimport { useStyles } from './Header.styles'\r\n\r\nimport { addresses, abis } from \"@project/contracts\";\r\nimport useOwner from '../../hooks/useOwner';\r\nimport useContractInfo from '../../hooks/useContractInfo';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\n\r\nconst WalletButton = ({ provider, loadWeb3Modal, logoutOfWeb3Modal, connected }) => {\r\n    return (\r\n        <div>\r\n            <Button\r\n                size=\"large\"\r\n                variant={connected} \r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                    if (!provider) {\r\n                    loadWeb3Modal();\r\n                    } else {\r\n                    logoutOfWeb3Modal();\r\n                    }\r\n                }}\r\n                >\r\n                {!provider ? \r\n                    <Typography variant=\"body2\" noWrap>\r\n                        Connect Wallet\r\n                    </Typography>\r\n                : \r\n                    <Typography variant=\"body2\" noWrap>\r\n                        Disconnect \r\n                    </Typography>\r\n                }\r\n            </Button>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Header = ({title, nav1, nav2, provider, loadWeb3Modal, logoutOfWeb3Modal}) => {\r\n    const { account, library } = useWeb3React();\r\n    const [ connected, setConnected ] = React.useState('contained');\r\n    const [ isAdmin, setAdmin ] = React.useState(false);\r\n    const owner = useOwner();\r\n    const tokenBalance = useTokenBalance(addresses.bsc.ofly);\r\n    const accountBalance = useBalance();\r\n\r\n    const formatEther = (input) => {\r\n        if(library) {\r\n            return library.utils.fromWei(input.toString(), 'ether');\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n  \r\n    React.useEffect(() => {\r\n        if(owner && account) {\r\n            if(account === owner) {\r\n                console.log(owner)\r\n                console.log(account)\r\n                setAdmin(true);\r\n            }\r\n        }\r\n    }, [account, tokenBalance, accountBalance, owner])\r\n\r\n    return (\r\n        <AppBar position='relative' color='transparent' elevation={0} >\r\n            <Toolbar className={classes.header}>\r\n                <Grid \r\n                    container\r\n                    spacing={5}\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid container item xs>\r\n                        <Link to='/'> \r\n                            <img alt='OFlights logo' src={OflightLogo}/>\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid container item xs  >\r\n                        <Grid \r\n                            container\r\n                            spacing={6}\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item xs >\r\n                                <Typography \r\n                                    className={classes.title} \r\n                                    component={Link}\r\n                                    to={`/${nav1}`} \r\n                                    color=\"textPrimary\"\r\n                                    variant=\"h5\" \r\n                                    noWrap\r\n                                >\r\n                                    {nav1}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs >\r\n                                <Typography \r\n                                    className={classes.title} \r\n                                    component={Link}\r\n                                    to={`/${nav2}`} \r\n                                    color=\"textPrimary\"\r\n                                    variant=\"h5\" \r\n                                    noWrap\r\n                                >\r\n                                    {nav2}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs >\r\n                        <Grid \r\n                            container\r\n                            spacing={2}\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            className={classes.nowrapper}\r\n                        >\r\n                            <Grid item  >\r\n                                <Button\r\n                                    size=\"large\"\r\n                                    color=\"primary\"\r\n                                    variant='outlined'\r\n                                >\r\n                                   <Typography \r\n                                        className={classes.button}\r\n                                        variant=\"body2\" \r\n                                        color=\"primary\"\r\n                                        noWrap\r\n                                    >\r\n                                           {formatter.format(Number(accountBalance))} BNB\r\n                                    </Typography>\r\n                                </Button> \r\n                            </Grid>\r\n                            <Grid item  >\r\n                                <Button\r\n                                    size=\"large\"\r\n                                    color=\"primary\"\r\n                                    variant='outlined'\r\n                                    \r\n                                >\r\n                                   \r\n                                       {tokenBalance?\r\n                                            <Typography variant=\"body2\" noWrap className={classes.button}>\r\n                                                {formatter.format(Number(formatEther(tokenBalance)))} OFLY\r\n                                            </Typography>\r\n                                        :\r\n                                        <Typography variant=\"body2\" noWrap className={classes.button}>\r\n                                           Loading...\r\n                                        </Typography>\r\n                                        }\r\n                                     \r\n                                    \r\n                                </Button> \r\n                            </Grid>\r\n                            { isAdmin ==true ?\r\n                                <Grid item  >\r\n                                    <Button\r\n                                        size=\"medium\"\r\n                                        color=\"primary\"\r\n                                        variant=\"outlined\"\r\n                                        component={Link}\r\n                                        to=\"/admin\"\r\n                                    >\r\n                                        <SettingsIcon />\r\n                                    </Button> \r\n                                </Grid>\r\n                               :\r\n                               <></> \r\n                            }\r\n                            <Grid item  >\r\n                                <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} connected={connected}/> \r\n                            </Grid>    \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>  \r\n    )\r\n};\r\n\r\nexport default Header;","import { theme } from '../../theme'\nimport { \n  makeStyles,\n} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n    container: {\n        padding:'0 50px 0 50px',\n        color: theme.palette.text.primary,\n        //backgroundColor: theme.palette.background.main \n      },\n    button: {\n        background: theme.palette.gradient.main,\n        color: theme.palette.text.primary, \n    }\n    })\n);","import { theme } from '../../../theme'\nimport { \n  makeStyles,\n} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    card: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '32vh',\n        backgroundColor: theme.palette.paper.main,\n        color: theme.palette.text.primary,\n        borderRadius : \"15px\",\n        padding: \"10px\"\n    },\n    content: {\n        color: theme.palette.text.main \n    },\n    nowrapper: {\n        display: 'flex',\n        flexWrap: 'nowrap'\n    },\n});","import { useCallback, useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { makeContract, MAX_UINT } from '../utils/utils';\nimport { getICOcontract } from '../utils/contracts';\n\nconst usePresaleStage = (id) => {\n    const { account, library, chainId } = useWeb3React()\n    const [ info, setInfo ] = useState();\n    const ICO = getICOcontract(library, chainId);\n\n    const fetchInfo = useCallback(async () => {\n      const info = await ICO.methods.getStage(id).call();\n      const stage = { \n          name: info.name, \n          allocation: info.allocation, \n          min: info.min,\n          limit: info.limit, \n          rate: info.rate,\n          sold: info.sold,\n          active: info.active.toString(), \n          goalReached: info.goalReached.toString(), \n          whitelisted: info.whitelisted.toString(),               \n      };\n      \n      setInfo(stage)\n\n    }, [account, library])\n\n    useEffect(() => {\n   \n        if (account && library && ICO && id) {\n            fetchInfo();\n        }\n        \n    }, [account, library])\n\n    return info\n}\n\nexport default usePresaleStage;\n","import { useCallback, useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { makeContract, MAX_UINT } from '../utils/utils';\nimport { getICOcontract } from '../utils/contracts';\n\nconst useCurrentStage = () => {\n    const { account, library, chainId } = useWeb3React()\n    const [ currentStage, setCurrentStage ] = useState(0);\n    const ICO = getICOcontract(library, chainId);\n\n    const fetchInfo = useCallback(async () => {\n        const _currentStage = await ICO.methods.currentStage().call();\n        setCurrentStage(_currentStage);\n    }, [account, library])\n\n    useEffect(() => {\n\n        if (account && library && ICO) {\n            fetchInfo()\n        }\n    }, [account, library])\n\n    return currentStage\n}\nexport default useCurrentStage;\n","import React from 'react';\r\nimport { \r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\nimport MaterialCard from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { formatter } from '../../../utils/utils'\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { useStyles } from './InfoCard.styles';\r\n\r\nimport usePresaleStage from '../../../hooks/usePresaleStage';\r\nimport useCurrentStage from '../../../hooks/useCurrentStage';\r\n\r\nconst InfoCard = (props) => {\r\n    const {account, library } = useWeb3React();\r\n    const currentStage = useCurrentStage();\r\n    const stage = usePresaleStage(currentStage);\r\n\r\n    const [ info, setInfo ] = React.useState();\r\n    \r\n    React.useEffect(() => {\r\n    \r\n        if(account && library) {   \r\n            setInfo(stage);\r\n            \r\n        }\r\n       \r\n    }, [ account])\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MaterialCard className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n                <Grid\r\n                    container\r\n                    direction='column'\r\n                    spacing={4}\r\n                >\r\n                    <Grid item xs>\r\n                        <Typography variant=\"h4\" gutterBottom noWrap>\r\n                            Token Sale Process\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Typography variant=\"body1\" gutterBottom noWrap>\r\n                            {stage?\r\n                                ''\r\n                            :\r\n                                ''\r\n                            }\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Grid \r\n                    container\r\n                    direction=\"row\"\r\n                    spacing={5}\r\n                    className={classes.nowrapper}\r\n                >\r\n                    <Grid item xl> \r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            className={classes.nowrapper}\r\n                        >\r\n                            <Grid item xs>\r\n                                <Typography variant=\"body1\" noWrap>\r\n                                    Tokens Allocated:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Typography variant=\"body1\" noWrap>\r\n                                    Rate:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Typography variant=\"body1\" noWrap>\r\n                                    Currencies: \r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Typography variant=\"body1\" noWrap>\r\n                                    Minimum Buy:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Typography variant=\"body1\">\r\n                                    Maximum Buy:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Typography variant=\"body1\">\r\n                                    Already sold:\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xl> \r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-end\"\r\n                            className={classes.nowrapper}\r\n                        >\r\n                            {stage? \r\n                            <>\r\n                                <Grid item xs>\r\n                                    <Typography variant=\"body1\" noWrap>\r\n                                        {formatter.format(Number(library.utils.fromWei(stage.allocation, 'ether')))}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Typography variant=\"body1\" noWrap>\r\n                                        {formatter.format(Number(library.utils.fromWei(stage.rate, 'ether')))}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Typography variant=\"body1\" noWrap>\r\n                                        DAI - USDC - USDT\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Typography variant=\"body1\" noWrap>\r\n                                        {formatter.format(Number(library.utils.fromWei(stage.min, 'ether')))}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Typography variant=\"body1\" noWrap>\r\n                                        {formatter.format(Number(library.utils.fromWei(stage.limit, 'ether')))}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs>\r\n                                    <Typography variant=\"body1\" noWrap>\r\n                                        {formatter.format(Number(library.utils.fromWei(stage.sold, 'ether')))}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </>\r\n                            :\r\n                                <></>\r\n                            }\r\n                            \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>   \r\n            </CardContent>\r\n        </MaterialCard>\r\n    )\r\n}\r\n\r\nexport default InfoCard;\r\n\r\n\r\n","import { theme } from '../../../theme'\nimport { \n  makeStyles,\n} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    card: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '32vh',\n        backgroundColor: theme.palette.paper.main,\n        color: theme.palette.text.primary,\n        borderRadius : \"15px\",\n        padding: \"10px\"\n    },\n    nowrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: 'nowrap',\n        \n    },\n    button: {\n        minWidth: \"130px\",\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.primary.main,\n    }\n});","import React from 'react';\nimport { \n    Grid,\n    Button,\n    TextField,\n    Menu,\n    MenuItem,\n} from '@material-ui/core'\n\nimport {\n    withStyles,\n    makeStyles,\n  } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nimport { useWeb3React } from '@web3-react/core';\nimport { formatter } from '../../utils/utils'\nimport daiLogo from '../../assets/dai.png'\nimport usdcLogo from '../../assets/usdc.png'\nimport usdtLogo from '../../assets/usdt.png'\nimport busdLogo from '../../assets/busd.png'\n\nimport { addresses, abis } from \"@project/contracts\";\nimport { getDAI } from '../../utils/contracts';\n\nimport useTokenBalance from '../../hooks/useTokenBalance';\n\nimport { theme } from '../../theme';\n\nconst CssTextField = withStyles({\n    root: {\n        width:'100%',\n        '& .MuiInputBase-root': {\n            color: 'inherit',\n          },\n        \n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n            borderColor: theme.palette.primary.main,\n            },\n        },\n    },\n})(TextField);\n\nconst useStyles = makeStyles({\n    textfield: {\n        color: theme.palette.text.primary\n    },\n    container: {\n       \n        flexWrap: 'nowrap'\n    },\n    label: {\n        display: 'flex',\n        direction: 'row',\n       \n    },\n    menu:{\n        '& .MuiPaper-root': {\n            backgroundColor: theme.palette.paper.main\n        },\n    }\n});\n\nconst PickerInput = (props) => {\n    const { account, chainId, library } = useWeb3React();\n    const [ anchorEl, setAnchorEl ] = React.useState(null);\n    const [ image, setImage ] = React.useState(daiLogo);\n    const [ balance, setBalance ] = React.useState(0);\n    const [ selected, setSelected ] = React.useState(addresses.bsc.dai)\n    const tokenBalance = useTokenBalance(selected);\n    const dai = getDAI(library, chainId);\n    \n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleClickDai = () => {\n        setImage(daiLogo);\n        setSelected(addresses.bsc.dai);\n        props.onClick(addresses.bsc.dai)\n        handleClose();\n    }\n    const handleClickUsdc = () => {\n        setImage(usdcLogo);\n        setSelected(addresses.bsc.usdc);\n        props.onClick(addresses.bsc.usdc)\n        handleClose();\n    }\n    const handleClickUsdt = () => {\n        setImage(usdtLogo);\n        setSelected(addresses.bsc.usdt);\n        props.onClick(addresses.bsc.usdt)\n        handleClose();\n    }\n    const handleClickBusd = () => {\n        setImage(busdLogo);\n        setSelected(addresses.bsc.busd);\n        props.onClick(addresses.bsc.busd)\n        handleClose();\n    }\n\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        console.log('PICKERINPUT')\n        if(account && library) {   \n            setBalance(\n                library.utils.fromWei(tokenBalance.toString(), 'ether')\n            );\n        }\n    }, [selected, account, tokenBalance]);\n\n    return (\n        <Grid \n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            className={classes.container}\n        >\n            <Grid item xs={9}>\n                <CssTextField\n                    id=\"input\"\n                    variant='outlined'\n                    InputLabelProps={{\n                        shrink: true,\n                        className: classes.textfield\n                        \n                    }}\n                    size='medium'\n                    type=\"number\"\n                    label={props.label}\n                    defaultValue={props.defaultValue}\n                    helperText={`Balance: ${formatter.format(balance)}`}\n                    onChange={props.onChange}\n                    \n                />\n            </Grid>\n            <Grid item xs={3}>\n                <Button  onClick={handleClick}>\n                    <img src={image} alt=\"payment\" style={{maxWidth:\"42px\"}} />\n                    <ArrowDropDownIcon size='small'/>\n                </Button>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    className={classes.menu}\n                >\n                    <MenuItem onClick={handleClickDai} >\n                        <img src={daiLogo} alt=\"Maker Dai\" style={{maxWidth:\"40px\"}} />\n                    </MenuItem>\n                    <MenuItem onClick={handleClickUsdc}>\n                        <img src={usdcLogo} alt=\"Usd-Coin\" style={{maxWidth:\"40px\"}} />\n                    </MenuItem>\n                    <MenuItem onClick={handleClickUsdt}>\n                        <img src={usdtLogo} alt=\"Tether\" style={{maxWidth:\"40px\"}} />\n                    </MenuItem>\n                    <MenuItem onClick={handleClickBusd}>\n                        <img src={busdLogo} alt=\"Binance Usd\" style={{maxWidth:\"40px\"}} />\n                    </MenuItem>\n                </Menu>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default PickerInput; ","import React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { getFarmContract, getDAI, getUSDT, getUSDC , getOFLY, getWBNB } from '../utils/contracts'\n\nconst useApprove = (amount, address, contract) => {\n    const { account, library, chainId } = useWeb3React()\n   \n    const approve = async (_address, _amount) => {\n        await contract.methods.approve(\n            _address, \n            _amount\n        ).send({from: account});\n    }\n\n    const handleApprove = React.useCallback(\n      async () => {\n        await approve(\n            address,\n            amount.toString(),\n        )\n      },\n      [account, address, amount, contract],\n    )\n  \n    return { onApprove: handleApprove }\n  }\n  \n  export default useApprove","import { useCallback, useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { makeContract, MAX_UINT } from '../utils/utils';\nimport { getICOcontract } from '../utils/contracts';\nimport useBlock from './useBlock'\n\nconst useAllowance = (tokenAddress, spender) => {\n    const { account, library, chainId } = useWeb3React()\n    const [ allowance, setAllowance] = useState(new BigNumber(0))\n    const block = useBlock()\n\n    const fetchAllowance = useCallback(async () => {\n        const contract = makeContract(library, abis.erc20, tokenAddress);   \n        const allowance = await contract.methods.allowance(account, spender).call();\n        setAllowance(allowance.toString());\n    }, [account, library, tokenAddress])\n\n    useEffect(() => {\n\n        if (account && library && tokenAddress && spender ) {\n            fetchAllowance()\n        }\n       \n    }, [account, library, tokenAddress, spender])\n\n    return allowance\n}\n\nexport default useAllowance\n","import React from 'react'\nimport { \n    Grid,\n    Button,\n    Typography \n} from '@material-ui/core'\nimport MaterialCard from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { useWeb3React } from '@web3-react/core';\nimport { useStyles } from './InvestCard.styles';\nimport PickerInput from '../../inputs/PickerInput'\nimport { addresses, abis } from \"@project/contracts\";\n\nimport { getDAI, getUSDC, getUSDT, getICOcontract } from '../../../utils/contracts';\nimport { MAX_UINT, makeContract } from '../../../utils/utils';\n\nimport useApprove from '../../../hooks/useApprove';\nimport useAllowance from '../../../hooks/useAllowance';\n\n\nconst InvestCard = (props) => {\n    const {account, chainId, library } = useWeb3React();\n\n    const ico = getICOcontract(library, chainId);\n    const dai = getDAI(library, chainId);\n\n    const [ value, setValue ] = React.useState(0);\n    const [ selected, setSelected ] = React.useState(addresses.bsc.dai);\n    const [ token, setToken ] = React.useState();\n    \n    const [ message, setMessage ] = React.useState();\n    const [ loading, setLoading ] = React.useState(false); \n\n    const [ approved, setApproved ] = React.useState(false);\n    const allowance = useAllowance(selected, addresses.bsc.ico);\n    \n    const { onApprove } = useApprove(MAX_UINT, addresses.bsc.ico, token);\n \n    const handleChange = (e) => {\n        let _value = library.utils.toWei(e.target.value.toString(), 'ether');\n        setValue(_value)\n    };\n\n    const handleSelect = (_selected) => {\n        setSelected(_selected)\n    }\n\n\n    const onBuy = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setMessage('Waiting on transaction succes.....');\n        try {\n            await ico.methods.buyTokens(\n                    value.toString(), \n                    selected\n                ).send({from: account}).then(()=> {\n                setMessage('Succes.....');\n                setLoading(false);\n               \n            });\n\n          } catch (e) {\n                if (e.message.includes(\"User denied transaction signature\")) {\n                    setMessage('Ser? Why you cancel?');\n                } else {\n                    console.log(e)\n                }\n          }\n        setLoading(false);\n        setMessage('')\n    }\n\n    \n\n      React.useEffect(() => {\n        console.log('INVESTCARD')\n        if(account && library && selected && allowance ) { \n            const token = makeContract(library, abis.erc20, selected);\n            setToken(token)\n            if( Number(allowance) > 0) {\n                setApproved(true);\n            } else {\n                setApproved(false);\n            }\n        }\n        return () => {\n            setToken(undefined)\n            setApproved(undefined)\n        }\n    }, [selected, allowance, account]);\n\n\n    \n    const classes = useStyles();\n    return (\n        <MaterialCard className={classes.card}>\n            <CardContent>\n                <Grid\n                    container\n                    direction=\"column\"\n                   \n                    alignItems=\"center\"\n                    spacing={3}\n                >\n                    \n                    <Grid item xs={12}>\n                        <Typography variant=\"h4\" gutterBottom noWrap>\n                            Buy OFLY Tokens\n                        </Typography>\n                    </Grid>\n                    <Grid item >\n                        <PickerInput \n                            onClick={handleSelect}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item >\n                        <Grid \n                            container item\n                            spacing={3}\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs>\n                                <Button  \n                                    className={classes.button} \n                                    disabled={approved} \n                                    variant=\"contained\" \n                                    onClick={onApprove}\n                                    \n                                > \n                                    <Typography noWrap>\n                                        Approve \n                                    </Typography>  \n                                </Button>\n                            </Grid>\n                            <Grid item xs>\n                                <Button  \n                                    className={classes.button} \n                                    variant=\"contained\" \n                                    onClick={onBuy}\n                                    \n                                > \n                                    <Typography noWrap>\n                                        Buy OFLY\n                                    </Typography>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item >\n                        <Typography variant=\"caption\">\n                            You will recive: x amount of OFLY\n                        </Typography>\n                    </Grid>\n   \n                </Grid>\n            </CardContent>\n        </MaterialCard>\n    )\n}\n\nexport default InvestCard;\n\n\n","import React from \"react\";\r\nimport {\r\n  Grid, \r\n  Typography,\r\n  Button\r\n} from '@material-ui/core'\r\nimport { useStyles } from './Home.styles'\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport InfoCard from '../../components/cards/infocard/InfoCard.component';\r\nimport InvestCard from '../../components/cards/investcard/InvestCard.component';\r\n\r\nfunction Home() {\r\n  const {account, chainId, library } = useWeb3React();\r\n\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n \r\n    if(!!account) {\r\n      \r\n    }\r\n    \r\n    return () => {\r\n      \r\n    }\r\n  }, [account, chainId]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={4}\r\n      justify='center'\r\n      alignItems='center'\r\n      className={classes.container}\r\n    >\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h2\">\r\n            O.Flights (OFLY) Token Sale\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} >\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          className={classes.button}\r\n          href=\"https://fc5fdf55-4241-45fe-a274-d028d011ed78.filesusr.com/ugd/743b78_fecc2adf4c5a44bfa089d78a2abc5214.pdf\"\r\n          target=\"_blank\"\r\n        > OFLY Lightpaper </Button>\r\n      </Grid>\r\n      <Grid \r\n        container item xs={12}\r\n        spacing={9}\r\n      >\r\n        <Grid container justify=\"center\" item xs>\r\n          <InfoCard/>\r\n        </Grid>\r\n        <Grid container justify=\"center\" item xs >\r\n          <InvestCard/>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n       \r\n      </Grid>\r\n    </Grid>        \r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n","import { theme } from '../../theme'\nimport { \n  makeStyles,\n} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n    container: {\n        padding:'0 50px 0 50px',\n        color: theme.palette.text.primary,\n      },\n   \n    button: {\n        color: theme.palette.text.main, \n    }\n    })\n);","import { theme } from '../../theme'\nimport { \n  makeStyles,\n} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    card: {\n        backgroundColor: theme.palette.paper.main,\n        color: theme.palette.text.primary,\n        borderRadius : \"15px\",\n        \n    },\n    button: {\n        background: theme.palette.gradient.main,\n        color: theme.palette.text.primary, \n    }\n});","import React from 'react';\nimport { theme } from '../../theme';\nimport { \n    TextField,\n} from '@material-ui/core'\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst CssTextField = withStyles({\n    root: {\n        color: theme.palette.text.primary,\n        width: '100%',\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n          },\n        '& .MuiInputBase-root': {\n            color: 'inherit',\n          },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n            borderColor: theme.palette.primary.main,\n            },\n        },\n    },\n    \n})(TextField);\n\n\nconst BasicInput = (props) => {\n   \n    return (\n        <CssTextField\n            variant='standard'\n            InputLabelProps={{\n                shrink: true,\n            }}\n            size=\"medium\"\n            type={props.type}\n            label={props.label}\n            defaultValue={props.defaultValue}\n            helperText={props.helperText}\n            onChange={props.onChange}\n        />\n    )\n}\n\nexport default BasicInput; ","import React from 'react';\nimport { \n    Grid,\n    Typography,\n    Button\n} from '@material-ui/core'\nimport MaterialCard from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { getICOcontract } from '../../../utils/contracts';\nimport { useWeb3React } from '@web3-react/core';\nimport { useStyles } from '../adminpanel.styles';\nimport BasicInput from '../../inputs/BasicInput';\nimport AssistantIcon from '@material-ui/icons/Assistant';\n\nconst NewStage = () => {\n    const { account, library, chainId } = useWeb3React();\n    const [ allocation, setAllocation ] = React.useState();\n    const [ min, setMin ] = React.useState();\n    const [ limit, setLimit ] = React.useState();\n    const [ rate, setRate ] = React.useState();\n    const [ name, setName ] = React.useState();\n    const [ whitelisted, setWhitelisted ] = React.useState();\n\n    const ico = getICOcontract(library, chainId);\n\n    const classes = useStyles();\n\n    const handleSubmit = async (e) => {\n      \n        try {\n            await ico.methods.setNewStage(\n                library.utils.toWei(allocation.toString(), \"ether\"), \n                library.utils.toWei(min.toString(), \"ether\"),\n                library.utils.toWei(limit.toString(), \"ether\"),\n                library.utils.toWei(rate.toString(), \"ether\"),  \n                name.toString(), \n                whitelisted.toString(),\n            ).send({from: account})\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return(\n        <MaterialCard className={classes.card}>\n            <CardContent>\n                <Grid \n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >   \n                    <Grid item xs={12}>\n                        <AssistantIcon fontSize='large'/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant='h5'>\n                            New Sale Stage\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <BasicInput\n                            onChange={(e) =>setName(e.target.value)}\n                            label=\"Name\"\n                            helperText=\"Name of the Sale Stage\"\n                            type=\"text\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <BasicInput\n                            onChange={(e) =>setAllocation(e.target.value)}\n                            label=\"Allocation\"\n                            helperText=\"The amount of tokens allocated to the stage\"\n                            type=\"number\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <BasicInput\n                            onChange={(e) =>setMin(e.target.value)}\n                            label=\"Buy Minimum\"\n                            helperText=\"The Minimum amount stablecoins a address can spend\"\n                            type=\"number\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <BasicInput\n                            onChange={(e) =>setLimit(e.target.value)}\n                            label=\"Buy limit\"\n                            helperText=\"The maximum amount stablecoins a address can spend\"\n                            type=\"number\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <BasicInput\n                            onChange={(e) =>setRate(e.target.value)}\n                            label=\"Rate\"\n                            helperText=\"Amount of OFLY tokens you get for 1 Stablecoin\"\n                            type=\"number\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <BasicInput\n                            onChange={(e) =>setWhitelisted(e.target.value)}\n                            label=\"Whitelisted\"\n                            helperText=\"If the stage should be whitelisted or not. TRUE or FALSE\"\n                            type=\"text\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <Button\n                        variant=\"outlined\"\n                        size='large'\n                    >\n                        <Typography onClick={handleSubmit} noWrap>\n                            Set a new sale stage\n                        </Typography>\n                    </Button>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </MaterialCard>\n\n    );\n};\n\nexport default NewStage;\n\n","import React from 'react';\nimport { \n    Grid,\n    Typography,\n} from '@material-ui/core'\nimport MaterialCard from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { useWeb3React } from '@web3-react/core';\nimport { useStyles } from '../adminpanel.styles';\nimport { formatter } from '../../../utils/utils'\nimport useContractInfo from '../../../hooks/useContractInfo';\n\nconst Info = () => {\n    const { account, library } = useWeb3React();\n    const [ info, setInfo ] = React.useState({ \n        remainingTokens: '', \n        remainingInput: '', \n        currentRate: '',\n        currentLimit: '', \n        totalStages: '',               \n      });\n    const contractInfo = useContractInfo();\n    \n    const classes = useStyles();\n\n    React.useEffect(() =>{\n        if(!!contractInfo) {\n            setInfo(contractInfo);\n        }\n        return () => {\n            setInfo(undefined)\n        }\n    },[contractInfo, account])\n    return(\n        <MaterialCard className={classes.card}>\n            <CardContent>\n                <Grid \n                    container\n                    direction='column'\n                    justify='space-between'\n                    alignItems='center'\n                >   \n                    <Grid item xs={12}>\n                        <MonetizationOnIcon fontSize='large'/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant='h5'>\n                            ICO Info\n                        </Typography>\n                    </Grid>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        spacing={5}\n                    >\n                        <Grid item xs={6}> \n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"flex-start\"\n                            >\n                                <Grid item xs>\n                                    <Typography variant=\"body1\">\n                                        Remaining Tokens:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs>\n                                    <Typography variant=\"body1\">\n                                        Remaining Input:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs>\n                                    <Typography variant=\"body1\">\n                                        Current Rate:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs>\n                                    <Typography variant=\"body1\">\n                                        Current Limit per Address:\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}> \n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"flex-end\"\n                            >\n                                {account? \n                                <>\n                                    <Grid item xs>\n                                    <Typography variant=\"body1\">\n                                        {formatter.format(library.utils.fromWei(info.remainingTokens.toString(), 'ether'))}\n                                    </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\">\n                                            {formatter.format(library.utils.fromWei(info.remainingInput.toString(), 'ether'))}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\">\n                                            {formatter.format(library.utils.fromWei(info.currentRate.toString(), 'ether'))}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\">\n                                            {formatter.format(library.utils.fromWei(info.currentLimit.toString(), 'ether'))}\n                                        </Typography>\n                                    </Grid>\n                                </>\n                                :\n                                    <></>\n                                }\n                                \n                            </Grid>\n                        </Grid>\n                    </Grid>  \n                </Grid>\n            </CardContent>\n        </MaterialCard>\n\n    );\n};\n\nexport default Info;\n\n","import React from 'react';\nimport { \n    Grid,\n    Typography,\n    Button\n} from '@material-ui/core'\nimport MaterialCard from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { useWeb3React } from '@web3-react/core';\nimport { useStyles } from '../adminpanel.styles';\nimport { getICOcontract } from '../../../utils/contracts';\n\nconst Controls = () => {\n    const { account, library, chainId } = useWeb3React();\n    const [ allocation, setAllocation ] = React.useState();\n    const [ limit, setLimit ] = React.useState();\n    const [ rate, setRate ] = React.useState();\n    const [ name, setName ] = React.useState();\n    const [ whitelisted, setWhitelisted ] = React.useState();\n    const [ paused, setPaused ] = React.useState(false);\n    const ICO = getICOcontract(library, chainId);\n    const classes = useStyles();\n\n    const onStart = async (e) => {\n        e.preventDefault();\n        try {\n            await ICO.methods.startICO().send({from: account});\n        } catch (err) {}\n    }\n\n    const onStartNext = async (e) => {\n        e.preventDefault();\n        try {\n            await ICO.methods.startNextStage().send({from: account});\n        } catch (err) {}\n    }\n\n    const onPause = async (e) => {\n        e.preventDefault();\n        try {\n            await ICO.methods.pauseICO().send({from: account});\n        } catch (err) {}\n    }\n\n    const onUnPause = async (e) => {\n        e.preventDefault();\n        try {\n            await ICO.methods.unpauseICO().send({from: account});\n        } catch (err) {}\n    }\n\n    return(\n        <MaterialCard className={classes.card}>\n            <CardContent>\n                <Grid \n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >   \n                    <Grid item xs={6}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            size='large'\n                            fullWidth={true}\n                            onClick={onStart}\n                        >\n                            <Typography >\n                                START ICO\n                            </Typography>\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        {paused == false ?\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                size='large'\n                                fullWidth={true}\n                                onClick={onPause}\n                            >\n                                <Typography >\n                                    PAUSE\n                                </Typography>\n                            </Button>\n                        :\n                            <Button\n                                variant=\"outlined\"\n                                color=\"default\"\n                                size='large'\n                                fullWidth={true}\n                                onClick={onUnPause}\n                            >\n                                <Typography >\n                                    UNPAUSE\n                                </Typography>\n                            </Button>\n                        }\n                        \n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            size='large'\n                            fullWidth={true}\n                            onClick={onStartNext}\n                        >\n                            <Typography >\n                                START NEXT STAGE\n                            </Typography>\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"default\"\n                            size='large'\n                            fullWidth={true}\n                            onClick={onUnPause}\n                        >\n                            <Typography >\n                                RESUME\n                            </Typography>\n                        </Button>\n                    </Grid>\n                    \n                </Grid>\n            </CardContent>\n        </MaterialCard>\n\n    );\n};\n\nexport default Controls;\n\n","import React from 'react';\nimport { \n    Grid,\n    Typography,\n    ButtonGroup,\n    Button\n} from '@material-ui/core'\nimport MaterialCard from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { useWeb3React } from '@web3-react/core';\nimport { useStyles } from '../adminpanel.styles';\nimport { getICOcontract } from '../../../utils/contracts'\nimport BasicInput from '../../inputs/BasicInput';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\n\nconst Whitelist = () => {\n    const { account, library, chainId } = useWeb3React();\n    const [ address, setAddress ] = React.useState();\n    const [ message, setMessage ] = React.useState('');\n\n    const classes = useStyles();\n    const ICO = getICOcontract(library, chainId);\n\n    const onCheckWhiteList = async(e) => {\n        e.preventDefault();\n        try{\n            let res = await ICO.methods.isWhitelisted(address).call();\n            setMessage(res);\n            console.log(res);\n        } catch(err){\n            console.log(err);\n            setMessage(err.message);\n        }\n    }\n\n    const onAddWhitelist = async(e) => {\n        e.preventDefault();\n        try{\n            let res = await ICO.methods.add(address).send({from: account});\n            setMessage(`${address} added to the whitelist`);\n        } catch(err){\n            console.log(err);\n            setMessage(err.message);\n        }\n    }\n    const onRemoveWhitelist = async(e) => {\n        e.preventDefault();\n        try{\n            let res = await ICO.methods.remove(address).send({from: account});\n            setMessage(`${address} removed from the whitelist`);\n        } catch(err){\n            console.log(err);\n            setMessage(err.message);\n        }\n    }\n\n    return(\n        <MaterialCard className={classes.card}>\n            <CardContent>\n                <Grid \n                    container\n                    spacing={1}\n                >   \n                    <Grid item xs={12}>\n                        <AssignmentIndIcon fontSize='large'/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant='h5'>\n                            Whitelist\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <BasicInput\n                            onChange={(e) =>setAddress(e.target.value)}\n                            helperText=\"Put in a address\"\n                            type=\"text\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant='caption'>\n                            Result:&nbsp; \n                            {message.toString()}\n                        </Typography>\n                    </Grid>\n                    <Grid container item justify=\"center\" xs={12}>\n                        <ButtonGroup\n                            variant=\"outlined\"\n                            color=\"default\"\n                            size='large'\n                        >\n                            <Button\n                                onClick={onCheckWhiteList}\n                            >\n                                <Typography>\n                                    Check\n                                </Typography>\n                            </Button>\n                            <Button\n                                onClick={onAddWhitelist}\n                            >\n                                <Typography>\n                                    Add\n                                </Typography>\n                            </Button>\n                            <Button\n                                onClick={onRemoveWhitelist}\n                            >\n                                <Typography>\n                                    Remove\n                                </Typography>\n                            </Button>\n                        </ButtonGroup>\n                        \n                    </Grid>                \n                </Grid>\n            </CardContent>\n        </MaterialCard>\n\n    );\n};\n\nexport default Whitelist;\n\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core';\nimport { \n    Table, \n    TableBody, \n    TableCell, \n    TableContainer, \n    TableHead,\n    TableFooter,\n    TablePagination,\n    TableRow,\n    Paper\n} from '@material-ui/core'\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport { useStyles } from '../adminpanel.styles';\nimport { formatter } from '../../../utils/utils';\n\n\nconst checkbox = (state) => {\n    if(state == 'true') {\n        return (\n            <CheckBoxIcon/>\n        );\n    } else if(state === 'false'){\n        return(\n            <CheckBoxOutlineBlankIcon/>\n        );\n    } else {\n        return (\n            <CheckBoxIcon/>\n        )\n    } \n};\n\n\nconst StagesTabel = () =>{\n    const { account, library, chainId } = useWeb3React();\n    const contractInfo = 0\n    const allstages = 0\n    const classes = useStyles();\n   \n\n    function createData(name, allocation, limit, rate, active, goalReached, whitelisted) {\n        return { name, allocation, limit, rate, active, goalReached, whitelisted };\n    }\n\n    const makeRows = () => {\n        let _rows =[]; \n        for(let i = 0; i < contractInfo.totalStages; i++){\n            _rows.push(createData(\n                allstages[i].name, \n                formatter.format(library.utils.fromWei(allstages[i].allocation.toString(), 'ether')), \n                formatter.format(library.utils.fromWei(allstages[i].limit.toString(), 'ether')),\n                formatter.format(library.utils.fromWei(allstages[i].rate.toString(), 'ether')), \n                allstages[i].active,\n                allstages[i].goalReached,\n                allstages[i].whitelisted,\n            ));\n        };\n        return _rows;\n    }\n    \n    const rows = makeRows();\n\n    return (\n        <TableContainer component={Paper} className={classes.card}>\n            <Table aria-label=\"simple table\">\n                <TableHead>\n                <TableRow>\n                    <TableCell>ICO Sale Stages</TableCell>\n                    <TableCell align=\"right\">Allocation</TableCell>\n                    <TableCell align=\"right\">Limit&nbsp;(USD)</TableCell>\n                    <TableCell align=\"right\">Rate&nbsp;(USD/OFLY)</TableCell>\n                    <TableCell align=\"right\">Active</TableCell>\n                    <TableCell align=\"right\">Goal Reached</TableCell>\n                    <TableCell align=\"right\">Whitelisted</TableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                {rows.map((row) => (\n                    <TableRow key={row.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.allocation}</TableCell>\n                    <TableCell align=\"right\">{row.limit}</TableCell>\n                    <TableCell align=\"right\">{row.rate}</TableCell>\n                    <TableCell align=\"right\">{checkbox(row.active)}</TableCell>\n                    <TableCell align=\"right\">{checkbox(row.goalReached)}</TableCell>\n                    <TableCell align=\"right\">{checkbox(row.whitelisted)}</TableCell>\n                    </TableRow>\n                ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n};\n\nexport default StagesTabel;","import React from \"react\";\r\nimport {\r\n  Grid, \r\n} from '@material-ui/core'\r\nimport { useStyles } from './Admin.styles'\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport NewStage from '../../components/adminpanel/components/NewStage.component'\r\nimport Info from '../../components/adminpanel/components/Info.component'\r\nimport Controls from '../../components/adminpanel/components/Controls.component'\r\nimport Whitelist from '../../components/adminpanel/components/Whitelist.component'\r\nimport StagesTabel from '../../components/adminpanel/components/StagesTable.component'\r\n\r\nfunction Admin() {\r\n  const {account, chainId, library } = useWeb3React();\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n   \r\n    if(!!account) {\r\n     \r\n    }\r\n    \r\n    return () => {\r\n      \r\n    }\r\n  }, [account, chainId]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify='center'\r\n      spacing={2}\r\n      className={classes.container}\r\n    >\r\n      <Grid item xs>\r\n        <Info/>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Controls/>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <StagesTabel/>\r\n      </Grid>\r\n      <Grid item xs>\r\n        <NewStage/>\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Whitelist/>\r\n      </Grid>\r\n    </Grid>        \r\n  );\r\n}\r\n\r\nexport default Admin;\r\n\r\n","import { theme } from '../../theme'\nimport { \n  makeStyles,\n} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n    container: {\n        padding:'0 50px 0 50px',\n        color: theme.palette.text.primary,\n        //backgroundColor: theme.palette.background.main \n      },\n    button: {\n        background: theme.palette.gradient.main,\n        color: theme.palette.text.primary, \n    }\n    })\n);","import { theme } from '../../../theme'\nimport { \n  makeStyles,\n} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n    card: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '32vh',\n        minWidth: '35vw',\n        backgroundColor: theme.palette.paper.main,\n        color: theme.palette.text.primary,\n        borderRadius : \"15px\",\n        padding: \"10px\"\n    },\n    content: {\n        color: theme.palette.text.main \n    },\n    nowrapper: {\n        display: 'flex',\n        flexWrap: 'nowrap'\n    },\n    modal: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'fixed'\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n});","import { theme } from '../../theme'\nimport { \n  makeStyles,\n} from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  modal: {   \n    borderRadius: '15px',\n    padding: '15px',\n    backgroundColor: theme.palette.paper.main\n  },\n});","import React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { getFarmContract, getDAI, getUSDT, getUSDC , getOFLY, getWBNB } from '../utils/contracts'\n\nconst useStake = (pid, amount) => {\n    const { account, library, chainId } = useWeb3React()\n    const farm = getFarmContract(library, chainId);\n\n    const deposit = async (_pid, _amount) => {\n        await farm.methods.deposit(\n            _pid, \n            library.utils.toWei(_amount, 'ether')\n        ).send({from: account});\n    }\n\n    const handleStake = React.useCallback(\n      async () => {\n        await deposit(\n          pid.toString(),\n          amount.toString(),\n        )\n      },\n      [account, pid, amount, farm],\n    )\n  \n    return { onStake: handleStake }\n  }\n  \n  export default useStake","import React from 'react'\nimport {\n    Typography, \n    Grid,\n    Modal, \n    Button, \n    ButtonGroup,\n    TextField, \n    Switch,\n    Avatar, \n } from '@material-ui/core'\n\nimport MaterialCard from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { useStyles } from './StakeModal.styles';\nimport { useWeb3React } from '@web3-react/core';\n\nimport BaiscInput from '../inputs/BasicInput'\n\nimport useStake from '../../hooks/useStake';\nimport useApprove from '../../hooks/useApprove';\nimport useAllowance from '../../hooks/useAllowance';\n\nimport { MAX_UINT, formatter } from '../../utils/utils';\nimport { addresses, abis } from \"@project/contracts\";\n\nconst StakeModal = ({pid, lpToken, balance}) => {\n    const {account, chainId, library } = useWeb3React();\n\n    const classes = useStyles();\n    const [ value, setValue ] = React.useState(0);\n    const [ withdraw, setWithdraw ] = React.useState(false);\n    const [ approved, setApproved ] = React.useState(false);\n    \n    const { onStake } = useStake(pid, value);\n    const { onApprove } = useApprove(MAX_UINT, addresses.bsc.farm, lpToken);\n\n    const allowance = useAllowance(lpToken.options.address, addresses.bsc.farm);\n\n    const handleChange = (e) => {\n        setValue(e.target.value)\n    };\n\n    \n\n    React.useEffect(() => {\n        if(account && library && lpToken && allowance) {\n            console.log(pid)\n            console.log(lpToken.options.address)\n            console.log(allowance.toString())\n            if(Number(allowance.toString()) > 0) {\n                setApproved(true)\n            } else {\n                setApproved(false)\n            }\n        }\n    },[pid, allowance, lpToken])\n\n    return (\n        <form  noValidate autoComplete=\"off\">\n            <Grid \n                container\n                className={classes.modal}\n                justify='center'\n            >\n                <Grid \n                    container \n                    justify=\"center\" \n                    alignItems=\"center\" \n                    item xs={12}\n                >\n                    <Typography variant='caption' color='textPrimary'>\n                        Deposit\n                    </Typography>\n                    <Switch\n                        checked={withdraw} \n                        onChange={()=>setWithdraw(!withdraw)}\n                    />\n                    <Typography variant='caption' color='textPrimary'>\n                        Withdraw\n                    </Typography>\n                </Grid>\n                {withdraw === false ?\n                    <Grid \n                        container\n                        alignItems='center'\n                        item xs={12}\n                        spacing={1}\n                    >\n                        <Grid item xs={12}>\n                            <BaiscInput\n                                type=\"number\"\n                                onChange={handleChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant='caption' color='textPrimary'>\n                                Balance : {balance ? formatter.format(library.utils.fromWei(balance.toString(), 'ether')) : 'Loading.....'}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            {approved == false?\n                                <Button \n                                    variant=\"contained\" \n                                    color='primary' \n                                    fullWidth={true}\n                                    onClick={onApprove}\n                                >\n                                    Approve\n                                </Button>\n                                :\n                                <Button \n                                    variant=\"contained\" \n                                    color='primary' \n                                    fullWidth={true}\n                                    onClick={onStake}\n                                >\n                                    Deposit\n                                </Button>\n                            }\n                        </Grid>\n                    </Grid>\n                    :\n                    <Grid \n                        container\n                        alignItems='center'\n                        item xs={12}\n                        spacing={1}\n                    >\n                        <Grid item xs={12}>\n                            <BaiscInput/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Typography variant='caption' color='textPrimary'>\n                                *deposited here*\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                variant=\"contained\" \n                                color='primary' \n                                fullWidth={true}\n                               \n                            >\n                                Withdraw\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n                \n            </Grid>\n        </form>\n    )\n}\n\nexport default StakeModal;\n\n\n","import { useCallback, useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { makeContract, MAX_UINT, getTotalLPValue } from '../utils/utils';\nimport { getFarmContract } from '../utils/contracts';\n\nconst useFarm = (id) => {\n    const { account, library, chainId } = useWeb3React()\n    const [ info, setInfo ] = useState({ \n        lpToken: '', \n        allocPoint: '', \n        lastRewardBlock: '',\n        accOflyPerShare: '',     \n    });\n    \n\n    const fetchInfo = useCallback(async () => {\n      const FARM = getFarmContract(library, chainId);\n      const info = await FARM.methods.poolInfo(id).call();\n      const poolInfo = { \n          lpToken: info.lpToken, \n          allocPoint: info.allocPoint, \n          lastRewardBlock: info.lastRewardBlock,\n          accOflyPerShare: info.accOflyPerShare,     \n      };\n      setInfo(poolInfo)\n\n    }, [account, library, id])\n\n    useEffect(() => {\n   \n        if (account && library ) {\n            fetchInfo();\n        }\n        \n    }, [account, library, id])\n\n    return info\n}\n\nexport default useFarm;\n","import { useCallback, useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { makeContract, MAX_UINT, getTotalLPValue } from '../utils/utils';\nimport { getFarmContract } from '../utils/contracts';\n\nconst useUserFarm = (pid) => {\n    const { account, library, chainId } = useWeb3React()\n    const [ info, setInfo ] = useState();\n    const FARM = getFarmContract(library, chainId);\n\n    const fetchInfo = useCallback(async () => {\n      const info = await FARM.methods.userInfo(pid, account).call();\n      const pending = await FARM.methods.pendingOfly(pid, account).call();\n      const userInfo = { \n          amount: info.amount, \n          rewardDebt: info.rewardDebt, \n          pending: pending\n      };\n      setInfo(userInfo)\n\n    }, [account, library])\n\n    useEffect(() => {\n\n        if (account && library && FARM) {\n            fetchInfo();\n        }\n    }, [account, library])\n\n    return info\n}\n\nexport default useUserFarm;\n","import React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { getFarmContract, getDAI, getUSDT, getUSDC , getOFLY, getWBNB } from '../utils/contracts'\n\nconst useHarvest = (pid) => {\n    const { account, library, chainId } = useWeb3React()\n\n    const harvest = async (_pid) => {\n        const farm = getFarmContract(library, chainId);\n        await farm.methods.deposit(\n            _pid, \n            library.utils.toWei('0', 'ether')\n        ).send({from: account});\n    }\n\n    const handleHarvest = React.useCallback(\n      async () => {\n        await harvest(\n          pid.toString(),\n        )\n      },\n      [account, pid],\n    )\n  \n    return { onHarvest: handleHarvest }\n  }\n  \n  export default useHarvest","import React from 'react';\nimport BigNumber from 'bignumber.js'\nimport { \n    Grid,\n    Typography,\n    Button,\n    Modal\n} from '@material-ui/core'\nimport clsx from 'clsx';\nimport MaterialCard from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport { formatter } from '../../../utils/utils'\nimport { useWeb3React } from '@web3-react/core';\nimport { useStyles } from './FarmCard.styles';\n\nimport { makeContract, MAX_UINT, getTotalLPValue } from '../../../utils/utils';\nimport { addresses, abis } from \"@project/contracts\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nimport StakeModal from '../../modals/StakeModal.component';\nimport useFarm from '../../../hooks/useFarm';\nimport useUserFarm from '../../../hooks/useUserFarm';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useHarvest from '../../../hooks/useHarvest';\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n  \n    return {\n        \n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\n\nconst FarmCard = ({pid, name, avatar}) => {\n    const { account, library, chainId } = useWeb3React();\n    const [ expanded, setExpanded ] = React.useState(false);\n    const [ open, setOpen ] = React.useState(false);\n    const [ token, setToken ] = React.useState();\n\n    const poolInfo = useFarm(pid);\n    const userInfo = useUserFarm(pid);\n    const tokenBalance = useTokenBalance(poolInfo.lpToken);\n\n    const { onHarvest } = useHarvest(pid);\n\n    const classes = useStyles();\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n      };\n\n    const handleOpen = () => {\n        setOpen(true);\n      };\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    React.useEffect(() => {\n       \n        if(account && library && poolInfo ) { \n            const token = makeContract(library, abis.erc20, poolInfo.lpToken);\n            setToken(token);\n            console.log(userInfo);\n            console.log(poolInfo);\n        }\n        \n    }, [ open, account ]);\n\n    return (\n        <MaterialCard className={classes.card}>\n            <Grid \n                container \n                direction=\"column\"\n            >\n                <CardHeader\n                    avatar={\n                        <Avatar src={avatar} className={classes.avatar}/>\n                    }\n                    \n                    title={name}\n                    subheader=\"\"\n                />\n                <CardContent>\n                    <Grid\n                        container\n                        spacing={2}\n                    >\n                        \n                        <Grid container item xs className={classes.nowrapper}>\n                            <Grid item xs> \n                                <Grid\n                                    container\n                                    direction=\"column\"\n                                    justify=\"center\"\n                                    alignItems=\"flex-start\"\n                                    className={classes.nowrapper}\n                                    spacing={1}\n                                >\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\" noWrap>\n                                            APR:\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\" noWrap>\n                                            Earn:\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\" noWrap>\n                                            {userInfo ?\n                                                library.utils.fromWei(userInfo.pending.toString(), 'ether')\n                                                :'Loading ....'\n                                            }\n                                        </Typography>\n                                    </Grid>\n                                    \n                                </Grid>\n                            </Grid>\n                            <Grid item > \n                                <Grid\n                                    container\n                                    direction=\"column\"\n                                    justify=\"center\"\n                                    alignItems=\"flex-end\"\n                                    className={classes.nowrapper}\n                                    spacing={1}\n                                >\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\" noWrap>\n                                        {poolInfo\n                                            ? `${new BigNumber(100)\n                                                .times(new BigNumber(100))\n                                                .times(new BigNumber(3))\n                                                .toNumber()\n                                                .toLocaleString('en-US')\n                                                .slice(0, -1)}%`\n                                            : 'Loading ...'}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\" noWrap>\n                                            * reward token *\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Button variant=\"contained\" color='primary' onClick={onHarvest}>\n                                            Harvest\n                                        </Button>\n                                    </Grid>               \n                                </Grid>\n                            </Grid>\n                        </Grid> \n                    </Grid>\n                </CardContent>\n                <CardActions disableSpacing>\n                    <Grid \n                        container\n                        spacing={3}\n                    >\n                        <Grid item xs={12}>                       \n                            <Button \n                                variant=\"contained\" \n                                color='primary' \n                                fullWidth={true}\n                                onClick={handleOpen}\n                            >\n                                Farm\n                            </Button>\n                        </Grid>\n                        \n                    </Grid>\n                    <IconButton\n                        className={clsx(classes.expand, {\n                            [classes.expandOpen]: expanded,\n                        })}\n                        onClick={handleExpandClick}\n                        aria-expanded={expanded}\n                        aria-label=\"show more\"\n                    >\n                        <ExpandMoreIcon />\n                    </IconButton>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        <Grid \n                            container \n                            spacing={1}\n                        >\n                           \n                            <Grid container item xs>\n                                <Grid item xs>\n                                    <Typography noWrap>\n                                        LP Balance:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs>\n                                    {tokenBalance ?\n                                        <Typography noWrap >\n                                            {formatter.format(library.utils.fromWei(tokenBalance.toString(), 'ether'))}\n                                        </Typography>\n                                    :\n                                        <Typography >\n                                            0\n                                        </Typography>\n                                    }\n                                </Grid>\n                            </Grid>\n                            {userInfo ? \n                            <Grid container item xs >\n                                <Grid item xs>\n                                    <Typography noWrap>\n                                        Deposited:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs>\n                                    <Typography noWrap>\n                                        {formatter.format(library.utils.fromWei(userInfo.amount.toString(), 'ether'))}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            :\n                                <></>\n                            }\n                            {userInfo?\n                            <Grid container item xs  >\n                                <Grid item xs>\n                                    <Typography noWrap>\n                                        Reward Debt:\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs>\n                                    <Typography noWrap>\n                                        {formatter.format(library.utils.fromWei(userInfo.rewardDebt.toString(), 'ether'))}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            :\n                                <></>\n                            }\n                        \n                            \n                        </Grid>\n                    </CardContent>\n                </Collapse>\n            </Grid>\n                <Modal\n                    style={getModalStyle()}\n                    className={classes.modal}\n                    open={open}\n                    onClose={handleClose}\n                    closeAfterTransition\n                >\n                    <>\n                        <StakeModal\n                            pid={pid}\n                            lpToken={token}\n                            balance={tokenBalance}\n                        />\n                    </>\n                </Modal>  \n        </MaterialCard>\n    )\n}\n\nexport default FarmCard;\n","import { useCallback, useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core';\nimport { addresses, abis } from \"@project/contracts\";\nimport { makeContract, MAX_UINT, getTotalLPValue } from '../utils/utils';\nimport { getFarmContract } from '../utils/contracts';\n\nconst useFarmsAmount = () => {\n    const { account, library, chainId } = useWeb3React()\n    const [ total, setTotal ] = useState();\n    const FARM = getFarmContract(library, chainId);\n\n    const fetchInfo = useCallback(async () => {\n      const total = await FARM.methods.poolLength().call();\n      setTotal(total)\n\n    }, [account, library, FARM ])\n\n    useEffect(() => {\n \n        if (account && library && FARM ) {\n            fetchInfo();\n        }\n\n    }, [account, library, FARM])\n\n    return total\n}\n\nexport default useFarmsAmount;\n","import React from \"react\";\nimport {\n  Grid, \n  Typography,\n  Button\n} from '@material-ui/core'\nimport { useStyles } from './Farm.styles'\nimport { useWeb3React } from \"@web3-react/core\";\nimport FarmCard from '../../components/cards/farmcard/FarmCard.component';\nimport useFarmsAmount from '../../hooks/useFarmsAmount';\n\nimport daiLogo from '../../assets/dai.png'\nimport usdcLogo from '../../assets/usdc.png'\nimport usdtLogo from '../../assets/usdt.png'\nimport busdLogo from '../../assets/busd.png'\n\n\nconst FarmNames = [\n  'OFly - Dai LP',\n  'OFly - Usdc LP',\n  'OFly - Usdt LP',\n  'OFly - Busd LP',\n];\n\nconst Avatars = [\n  daiLogo, \n  usdcLogo, \n  usdtLogo,\n  busdLogo,\n];\n\nconst renderFarms = (_pools) => {\n  const renderedFarms = [];\n\n  for(let i = 0; i < _pools; i++) {\n    renderedFarms.push(\n      <Grid item  key={i}>\n        <FarmCard\n          name={FarmNames[i]}\n          avatar={Avatars[i]}\n          pid={i}\n        />\n      </Grid>\n    )\n  }\n\n  return renderedFarms;\n  \n}\n\nfunction Farm() {\n  const {account, chainId, library } = useWeb3React();\n  const totalPools = useFarmsAmount();\n  const classes = useStyles();\n\n  React.useEffect(() => {\n  \n    if(!!account && !!totalPools) {\n      \n    }\n    \n    return () => {\n       \n    }\n  }, [account, chainId, totalPools]);\n\n  return (\n    <Grid\n      container\n      spacing={4}\n      justify='center'\n      alignItems='center'\n      className={classes.container}\n    >\n      <Grid item xs={12}>\n        <Typography variant=\"h2\">\n            O.Flights Farming\n        </Typography>\n      </Grid>\n      <Grid container spacing={4} justify='center' item xs={12} >\n        {account && totalPools ? \n            renderFarms(totalPools)\n        :\n          <></>\n        }\n        \n      </Grid>\n     \n  </Grid>             \n  );\n}\n\nexport default Farm;\n\n","import React from \"react\";\nimport { \n  Route, \n  BrowserRouter as Router, \n  Switch,\n} from 'react-router-dom';\n\nimport { \n  makeStyles, \n  ThemeProvider \n} from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core'\nimport { theme } from './theme';\nimport { useWeb3React } from '@web3-react/core';\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport Header from './components/header/Header.component';\nimport Home from './containers/home/Home.component';\nimport Admin from './containers/admin/Admin.component';\nimport Farm from './containers/farm/Farm.component';\nimport background from './assets/background.png'\n\nconst useStyles = makeStyles(() => ({\n      container: {\n        minWidth:'100vw',\n        minHeight:'102vh',\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 1.178),rgba(0, 0, 0, 0.700)) , url(${background});`,\n        backgroundPosition: 'center',\n        backgroundSize: '100% 100%',\n      }\n    })\n);\n\nfunction App() {\n  const { account, chainId } = useWeb3React();\n  const [ provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal();\n  \n\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n          <Grid \n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            align=\"center\"\n            spacing={4}\n            className={classes.container}\n          >\n            <Grid item xs={12}>\n              <Header \n                title='O.FLIGHTS'\n                provider={provider} \n                loadWeb3Modal={loadWeb3Modal} \n                logoutOfWeb3Modal={logoutOfWeb3Modal}\n                nav1='ico'\n                nav2='farming'\n              />\n            </Grid>\n            <Grid container item xs={12}>\n              <Switch>\n                <Route path=\"/\" exact component={Home}/>\n                <Route path=\"/ico\" component={Home}/>\n                <Route path=\"/farming\" component={Farm}/>\n                <Route path=\"/admin\" component={Admin}/>\n              </Switch>\n            </Grid>\n          </Grid>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Web3 from \"web3\";\nimport { Web3ReactProvider } from '@web3-react/core';\n\nfunction getLibrary(provider) {\n   const library = new Web3(provider);\n   library.pollingInterval = 10000\n   return library\n};\n\nReactDOM.render(\n   <Web3ReactProvider getLibrary={getLibrary}>\n       <App />\n   </Web3ReactProvider>,\n   document.getElementById(\"root\"),\n);"],"sourceRoot":""}